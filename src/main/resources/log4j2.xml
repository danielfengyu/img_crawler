<?xml version="1.0" encoding="UTF-8"?>
<!--根节点Configuration有两个属性:status和monitorinterval,有两个子节点:Appenders和Loggers(表明可以定义多个Appender和Logger)。-->
<!-- status用来指定log4j本身的打印日志的级别。
     monitorinterval用于指定log4j自动重新配置的监测间隔时间，单位是s,最小是5s-->
<configuration status="debug">
    <!--定义变量-->
    <properties>
        <!--有点搞不懂这个日志路径，先存在extra-temp这个绝对路径下-->
        <property name="LOG_HOME">./logs</property>
    </properties>
    <!-- 先定义所有的appender -->
    <appenders>
        <!-- 这个输出控制台的配置 -->
        <Console name="Console" target="SYSTEM_OUT">
            <!-- 控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
            <!-- 这个都知道是输出日志的格式 -->
            <PatternLayout pattern="[ %-20class{1} ] %msg%n" />
        </Console>
        <!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面，作为存档 -->
        <RollingFile name="RollingFile-info" fileName="${LOG_HOME}/info.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
            <!-- pattern = "[ 日志级别 | 类名 | 方法名 | 行数 | 线程名 | 区分客户端 | 时间 ] - 日志信息" -->
            <PatternLayout pattern="[ %level{length=1} | %-20class{1} | %-15M | %-2L | %-2t | %X{5} | %d{yyyy-MM-dd HH:mm:ss} ] %msg%n" />
            <Policies>
                <!--多长时间滚动一次 -->
                <TimeBasedTriggeringPolicy interval="2 hour" />
                <!-- 一个日志文件的最大大小 -->
                <SizeBasedTriggeringPolicy size="100MB" />
            </Policies>
            <!--文件夹下最多的文件个数 -->
            <DefaultRolloverStrategy max="20" />
        </RollingFile>
        <RollingFile name="RollingFile-debug" fileName="${LOG_HOME}/debug.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.log">
            <!-- pattern = "[ 日志级别 | 类名 | 方法名 | 行数 | 线程名 | 区分客户端 | 时间 ] - 日志信息" -->
            <PatternLayout
                    pattern="[ %level{length=1} | %-20class{1} | %-15M | %-2L | %-2t | %X{5} | %d{yyyy-MM-dd HH:mm:ss} ] %msg%n" />
            <Policies>
                <!--多长时间滚动一次 -->
                <TimeBasedTriggeringPolicy interval="2 hour" />
                <!-- 一个日志文件的最大大小 -->
                <SizeBasedTriggeringPolicy size="100MB" />
            </Policies>
            <!--文件夹下最多的文件个数 -->
            <DefaultRolloverStrategy max="20" />
        </RollingFile>
        <RollingFile name="RollingFile-error" fileName="${LOG_HOME}/error.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
            <!-- pattern = "[ 日志级别 | 类名 | 方法名 | 行数 | 线程名 | 区分客户端 | 时间 ] - 日志信息" -->
            <PatternLayout
                    pattern="[ %level{length=1} | %-20class{1} | %-15M | %-2L | %-2t | %X{5} | %d{yyyy-MM-dd HH:mm:ss} ] %msg%n" />
            <Policies>
                <!--多长时间滚动一次 -->
                <TimeBasedTriggeringPolicy interval="2 hour" />
                <!-- 一个日志文件的最大大小 -->
                <SizeBasedTriggeringPolicy size="100MB" />
            </Policies>
            <!--文件夹下最多的文件个数 -->
            <DefaultRolloverStrategy max="20" />
        </RollingFile>
    </appenders>
    <!-- 然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!-- 此处name里面的为对应的包名，包名必须和里面的类的package相同 -->
       <!-- <logger name="com.test.info" level="debug">
            &lt;!&ndash; ref的值是对应使用的appenders的值 &ndash;&gt;
            <appender-ref ref="RollingFile-info"/>
        </logger>
        <logger name="com.test.debug" level="debug" >
            <appender-ref ref="RollingFile-debug"/>
        </logger>
        <logger name="com.test.error" level="debug">
            <appender-ref ref="RollingFile-error"/>
        </logger>-->
        <!-- 建立一个默认的root的logger -->
        <root level="info">
            <appender-ref ref="RollingFile-info"/>
            <appender-ref ref="Console"/>
        </root>
    </loggers>
</configuration>